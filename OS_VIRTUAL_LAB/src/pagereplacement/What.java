/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pagereplacement;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;

/**
 *
 * @author Ritu
 */
public class What extends javax.swing.JFrame {

    private JPanel jPanel1;
    private JTextArea txtrLockVariable;
    private JButton btnNewButton;
    private JLabel lblNewLabel;

    /**
     * Creates new form What
     */
    public What() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane1.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMaximumSize(new Dimension(1000, 400));
        jScrollPane1.setPreferredSize(new Dimension(1000, 400));
        jScrollPane1.setBounds(0, 80, 1008, 455);
        jScrollPane1.setMinimumSize(new Dimension(1000, 400));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1022, 572));
        setPreferredSize(new java.awt.Dimension(1022, 572));
        
        txtrLockVariable = new JTextArea();
        txtrLockVariable.setEditable(false);
        txtrLockVariable.setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));
        txtrLockVariable.setText("What is Page Replacement Algorithm?\n\no The page replacement algorithm decides which memory page is to be replaced. The process of replacement is sometimes called swap out or write to disk. Page replacement is done when the requested page is not found in the main memory (page fault). \n\no There are two main aspects of virtual memory, Frame allocation and Page Replacement. It is very important to have the optimal frame allocation and page replacement algorithm. Frame allocation is all about how many frames are to be allocated to the process while the page replacement is all about determining the page number which needs to be replaced in order to make space for the requested page.\n\no Page replacement policies decides that which type of page should be replaced, but these page replacement strategies are implemented when requested page is not existed into primary memory. The conservative implementation of the Page Replacement Algorithm is for checking page fault, meeting the demand of fast page fetching and replacement by the usage of virtual memory.\n\no Use in techniques for Hardware with no Reference Bit :-\n\nApart from this conservative page replacement algorithm work and believe that each page has a reference bit. But, some hardwares don't have one reference bit for the pages appearing and thus pages may be selected for working set removal in an essentially random fashion, with the expectation that if a poor choice is made, a future reference may retrieve that page from the Free or Modified list before it is removed from physical memory. A page referenced this way will be removed from the Free or Modified list and placed back into a process working set. The Modified Page List additionally provides an opportunity to write pages out to backing store in groups of more than one page, increasing efficiency. These pages can then be placed on the Free Page List. The sequence of pages that works its way to the head of the Free Page List resembles the results of a LRU or NRU mechanism and the overall effect has similarities to the Second-Chance algorithm described earlier.\n\no Page Cache in Linux :-\n\nThe Page Caching works on the concept and manipulation of small pages and huge pages in linux. The pages are divided into two sets an active set and the passive set. And the fetching and transferring is done between these sets of page caches.\n");
        txtrLockVariable.setWrapStyleWord(true);
        txtrLockVariable.setMinimumSize(new Dimension(4, 22));
        txtrLockVariable.setLineWrap(true);
        txtrLockVariable.setTabSize(1);
        txtrLockVariable.setFont(new Font("Verdana", Font.PLAIN, 18));
        txtrLockVariable.setBackground(new Color(192, 192, 192));
        jScrollPane1.setViewportView(txtrLockVariable);
        jPanel1.setLayout(null);
        
        btnNewButton = new JButton("Back");
        btnNewButton.setBackground(new Color(0, 128, 128));
        btnNewButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		index a = new index();
                a.setLocationRelativeTo(null);
                a.setVisible(true);
                dispose();
        	}
        });
        btnNewButton.setFont(new Font("Verdana", Font.PLAIN, 18));
        btnNewButton.setBounds(901, 495, 77, 30);
        jPanel1.add(btnNewButton);
        
        lblNewLabel = new JLabel("WHAT");
        lblNewLabel.setPreferredSize(new Dimension(1000, 81));
        lblNewLabel.setOpaque(true);
        lblNewLabel.setMinimumSize(new Dimension(1022, 81));
        lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
        lblNewLabel.setForeground(new Color(230, 230, 250));
        lblNewLabel.setFont(new Font("Verdana", Font.BOLD, 40));
        lblNewLabel.setBackground(new Color(0, 128, 128));
        lblNewLabel.setBounds(0, 0, 1008, 81);
        jPanel1.add(lblNewLabel);
        jPanel1.add(jScrollPane1);
        GroupLayout groupLayout = new GroupLayout(getContentPane());
        groupLayout.setHorizontalGroup(
        	groupLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        		.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 1008, GroupLayout.PREFERRED_SIZE)
        );
        groupLayout.setVerticalGroup(
        	groupLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        		.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 535, GroupLayout.PREFERRED_SIZE)
        );
        getContentPane().setLayout(groupLayout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        // TODO add your handling code here:
        index a = new index();
        a.setLocationRelativeTo(null);
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(What.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(What.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(What.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(What.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new What().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
