/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pagereplacement;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;

/**
 *
 * @author Ritu
 */
public class Where extends javax.swing.JFrame {

    private JPanel jPanel1;
    private JTextArea txtrLockVariable;
    private JButton btnNewButton;
    private JLabel lblNewLabel;

    /**
     * Creates new form Where
     */
    public Where() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane1.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMaximumSize(new Dimension(1000, 400));
        jScrollPane1.setPreferredSize(new Dimension(1000, 400));
        jScrollPane1.setBounds(0, 80, 1008, 455);
        jScrollPane1.setMinimumSize(new Dimension(1000, 400));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1022, 572));
        setPreferredSize(new java.awt.Dimension(1022, 572));
        
        txtrLockVariable = new JTextArea();
        txtrLockVariable.setEditable(false);
        txtrLockVariable.setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));
        txtrLockVariable.setText("Where is Page replacement algorithm used?\n\no In a computer operating system that uses paging for virtual memory management, page replacement algorithms decide which memory pages to page out, sometimes called swap out, or write to disk, when a page of memory needs to be allocated. Page replacement happens when a requested page is not in memory (page fault) and a free page cannot be used to satisfy the allocation, either because there are none, or because the number of free pages is lower than some threshold.\n\no When the page that was selected for replacement and paged out is referenced again it has to be paged in (read in from disk), and this involves waiting for I/O completion. This determines the quality of the page replacement algorithm: the less time waiting for page-ins, the better the algorithm. A page replacement algorithm looks at the limited information about accesses to the pages provided by hardware, and tries to guess which pages should be replaced to minimize the total number of page misses, while balancing this with the costs (primary storage and processor time) of the algorithm itself.\n\no The page replacing problem is a typical online problem from the competitive analysis perspective in the sense that the optimal deterministic algorithm is known.");
        txtrLockVariable.setWrapStyleWord(true);
        txtrLockVariable.setMinimumSize(new Dimension(4, 22));
        txtrLockVariable.setLineWrap(true);
        txtrLockVariable.setTabSize(1);
        txtrLockVariable.setFont(new Font("Verdana", Font.PLAIN, 18));
        txtrLockVariable.setBackground(new Color(192, 192, 192));
        jScrollPane1.setViewportView(txtrLockVariable);
        jPanel1.setLayout(null);
        
        btnNewButton = new JButton("Back");
        btnNewButton.setBackground(new Color(0, 128, 128));
        btnNewButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		index a = new index();
                a.setLocationRelativeTo(null);
                a.setVisible(true);
                dispose();
        	}
        });
        btnNewButton.setFont(new Font("Verdana", Font.PLAIN, 18));
        btnNewButton.setBounds(901, 495, 77, 30);
        jPanel1.add(btnNewButton);
        
        lblNewLabel = new JLabel("WHERE");
        lblNewLabel.setPreferredSize(new Dimension(1000, 81));
        lblNewLabel.setOpaque(true);
        lblNewLabel.setMinimumSize(new Dimension(1022, 81));
        lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
        lblNewLabel.setForeground(new Color(230, 230, 250));
        lblNewLabel.setFont(new Font("Verdana", Font.BOLD, 40));
        lblNewLabel.setBackground(new Color(0, 128, 128));
        lblNewLabel.setBounds(0, 0, 1008, 81);
        jPanel1.add(lblNewLabel);
        jPanel1.add(jScrollPane1);
        GroupLayout groupLayout = new GroupLayout(getContentPane());
        groupLayout.setHorizontalGroup(
        	groupLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        		.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 1008, GroupLayout.PREFERRED_SIZE)
        );
        groupLayout.setVerticalGroup(
        	groupLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        		.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 535, GroupLayout.PREFERRED_SIZE)
        );
        getContentPane().setLayout(groupLayout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        // TODO add your handling code here:
        index a = new index();
        a.setLocationRelativeTo(null);
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Where.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Where.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Where.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Where.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Where().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
